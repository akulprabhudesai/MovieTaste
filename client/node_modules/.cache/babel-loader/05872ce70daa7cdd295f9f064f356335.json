{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Master's degree\\\\Portfolio\\\\Projects\\\\Flick_Review\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Master's degree\\\\Portfolio\\\\Projects\\\\Flick_Review\\\\client\\\\src\\\\components\\\\views\\\\LandingPage\\\\LandingPage.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Typography, Row, Button } from 'antd';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, IMAGE_SIZE, POSTER_SIZE } from '../../Config';\nimport MainImage from './Sections/MainImage';\nimport GridCard from '../../commons/GridCards';\nconst Title = Typography.Title;\n\nfunction LandingPage() {\n  const buttonRef = useRef(null);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Movies = _useState2[0],\n        setMovies = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        MainMovieImage = _useState4[0],\n        setMainMovieImage = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        Loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        CurrentPage = _useState8[0],\n        setCurrentPage = _useState8[1];\n\n  useEffect(() => {\n    const endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=1\");\n    fetchMovies(endpoint);\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const fetchMovies = endpoint => {\n    fetch(endpoint).then(result => result.json()).then(result => {\n      // console.log(result)\n      // console.log('Movies',...Movies)\n      // console.log('result',...result.results)\n      setMovies([...Movies, ...result.results]);\n      setMainMovieImage(MainMovieImage || result.results[0]);\n      setCurrentPage(result.page);\n    }, setLoading(false)).catch(error => console.error('Error:', error));\n  };\n\n  const loadMoreItems = () => {\n    let endpoint = '';\n    setLoading(true);\n    console.log('CurrentPage', CurrentPage);\n    endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-US&page=\").concat(CurrentPage + 1);\n    fetchMovies(endpoint);\n  };\n\n  const handleScroll = () => {\n    const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\n    const body = document.body;\n    const html = document.documentElement;\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n    const windowBottom = windowHeight + window.pageYOffset;\n\n    if (windowBottom >= docHeight - 1) {\n      // loadMoreItems()\n      console.log('clicked');\n      buttonRef.current.click();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      margin: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, MainMovieImage && React.createElement(MainImage, {\n    image: \"\".concat(IMAGE_BASE_URL).concat(IMAGE_SIZE).concat(MainMovieImage.backdrop_path),\n    title: MainMovieImage.original_title,\n    text: MainMovieImage.overview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '1rem auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Title, {\n    level: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Movies by latest \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Row, {\n    gutter: [16, 16],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, Movies && Movies.map((movie, index) => React.createElement(React.Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(GridCard, {\n    image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : null,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))), Loading && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Loading...\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    ref: buttonRef,\n    className: \"loadMore\",\n    onClick: loadMoreItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Load More\"))));\n}\n\nexport default LandingPage;","map":{"version":3,"sources":["C:\\Users\\prabh\\Desktop\\Master's degree\\Portfolio\\Projects\\Flick_Review\\client\\src\\components\\views\\LandingPage\\LandingPage.js"],"names":["React","useEffect","useState","useRef","Typography","Row","Button","API_URL","API_KEY","IMAGE_BASE_URL","IMAGE_SIZE","POSTER_SIZE","MainImage","GridCard","Title","LandingPage","buttonRef","Movies","setMovies","MainMovieImage","setMainMovieImage","Loading","setLoading","CurrentPage","setCurrentPage","endpoint","fetchMovies","window","addEventListener","handleScroll","fetch","then","result","json","results","page","catch","error","console","loadMoreItems","log","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","windowBottom","pageYOffset","current","click","width","margin","backdrop_path","original_title","overview","map","movie","index","poster_path","id","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { Typography, Row, Button } from 'antd';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, IMAGE_SIZE, POSTER_SIZE } from '../../Config'\r\nimport MainImage from './Sections/MainImage'\r\nimport GridCard from '../../commons/GridCards'\r\nconst { Title } = Typography;\r\nfunction LandingPage() {\r\n    const buttonRef = useRef(null);\r\n\r\n    const [Movies, setMovies] = useState([])\r\n    const [MainMovieImage, setMainMovieImage] = useState(null)\r\n    const [Loading, setLoading] = useState(true)\r\n    const [CurrentPage, setCurrentPage] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        fetchMovies(endpoint)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleScroll);\r\n    }, [])\r\n\r\n\r\n    const fetchMovies = (endpoint) => {\r\n\r\n        fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                // console.log('Movies',...Movies)\r\n                // console.log('result',...result.results)\r\n                setMovies([...Movies, ...result.results])\r\n                setMainMovieImage(MainMovieImage || result.results[0])\r\n                setCurrentPage(result.page)\r\n            }, setLoading(false))\r\n            .catch(error => console.error('Error:', error)\r\n            )\r\n    }\r\n\r\n    const loadMoreItems = () => {\r\n        let endpoint = '';\r\n        setLoading(true)\r\n        console.log('CurrentPage', CurrentPage)\r\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage + 1}`;\r\n        fetchMovies(endpoint);\r\n\r\n    }\r\n\r\n    const handleScroll = () => {\r\n        const windowHeight = \"innerHeight\" in window ? window.innerHeight : document.documentElement.offsetHeight;\r\n        const body = document.body;\r\n        const html = document.documentElement;\r\n        const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\r\n        const windowBottom = windowHeight + window.pageYOffset;\r\n        if (windowBottom >= docHeight - 1) {\r\n\r\n            // loadMoreItems()\r\n            console.log('clicked')\r\n            buttonRef.current.click();\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', margin: '0' }}>\r\n            {MainMovieImage &&\r\n                <MainImage\r\n                    image={`${IMAGE_BASE_URL}${IMAGE_SIZE}${MainMovieImage.backdrop_path}`}\r\n                    title={MainMovieImage.original_title}\r\n                    text={MainMovieImage.overview}\r\n                />\r\n\r\n            }\r\n\r\n            <div style={{ width: '85%', margin: '1rem auto' }}>\r\n\r\n                <Title level={2} > Movies by latest </Title>\r\n                <hr />\r\n                <Row gutter={[16, 16]}>\r\n                    {Movies && Movies.map((movie, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <GridCard\r\n                                image={movie.poster_path ?\r\n                                    `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                    : null}\r\n                                movieId={movie.id}\r\n                                movieName={movie.original_title}\r\n                            />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </Row>\r\n\r\n                {Loading &&\r\n                    <div>Loading...</div>}\r\n\r\n                <br />\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <button ref={buttonRef} className=\"loadMore\" onClick={loadMoreItems}>Load More</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n"]},"metadata":{},"sourceType":"module"}