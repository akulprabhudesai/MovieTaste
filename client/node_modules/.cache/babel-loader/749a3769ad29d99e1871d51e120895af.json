{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Master's degree\\\\Portfolio\\\\Projects\\\\Flick_Review\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\prabh\\\\Desktop\\\\Master's degree\\\\Portfolio\\\\Projects\\\\Flick_Review\\\\client\\\\src\\\\components\\\\views\\\\FavoritePage\\\\FavoritePage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Popover, Button } from 'antd';\nimport axios from 'axios';\nimport './favorite.css';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../Config';\nconst Title = Typography.Title;\n\nfunction FavoritePage() {\n  const user = useSelector(state => state.user);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Favorites = _useState2[0],\n        setFavorites = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        Loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  let variable = {\n    userFrom: localStorage.getItem('userId')\n  };\n  useEffect(() => {\n    fetchFavoredMovie();\n  }, []);\n\n  const fetchFavoredMovie = () => {\n    axios.post('/api/favorite/getFavoredMovie', variable).then(response => {\n      if (response.data.success) {\n        console.log(response.data.favorites);\n        setFavorites(response.data.favorites);\n        setLoading(false);\n      } else {\n        alert('Failed to get subscription videos');\n      }\n    });\n  };\n\n  const onClickDelete = (movieId, userFrom) => {\n    const variables = {\n      movieId: movieId,\n      userFrom: userFrom\n    };\n    axios.post('/api/favorite/removeFromFavorite', variables).then(response => {\n      if (response.data.success) {\n        fetchFavoredMovie();\n      } else {\n        alert('Failed to Remove From Favorite');\n      }\n    });\n  };\n\n  const renderCards = Favorites.map((favorite, index) => {\n    const content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, favorite.moviePost ? React.createElement(\"img\", {\n      src: \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(favorite.moviePost),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }) : \"no image\");\n    return React.createElement(\"tr\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Popover, {\n      content: content,\n      title: \"\".concat(favorite.movieTitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, favorite.movieTitle)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, favorite.movieRunTime, \" mins\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => onClickDelete(favorite.movieId, favorite.userFrom),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Remove \")));\n  });\n  return React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '3rem auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Title, {\n    level: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" Favorite Movies By Me \"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), user.userData && !user.userData.isAuth ? React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      fontSize: '2rem',\n      height: '500px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Please Log in first...\"), React.createElement(\"a\", {\n    href: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Go to Login page\")) : !Loading && React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Movie Title\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Movie RunTime\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Remove from favorites\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, renderCards)));\n}\n\nexport default FavoritePage;","map":{"version":3,"sources":["C:\\Users\\prabh\\Desktop\\Master's degree\\Portfolio\\Projects\\Flick_Review\\client\\src\\components\\views\\FavoritePage\\FavoritePage.js"],"names":["React","useEffect","useState","Typography","Popover","Button","axios","useSelector","IMAGE_BASE_URL","POSTER_SIZE","Title","FavoritePage","user","state","Favorites","setFavorites","Loading","setLoading","variable","userFrom","localStorage","getItem","fetchFavoredMovie","post","then","response","data","success","console","log","favorites","alert","onClickDelete","movieId","variables","renderCards","map","favorite","index","content","moviePost","movieTitle","movieRunTime","width","margin","userData","isAuth","fontSize","height","display","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Typography, Popover, Button } from 'antd';\r\nimport axios from 'axios';\r\nimport './favorite.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../Config'\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction FavoritePage() {\r\n    const user = useSelector(state => state.user)\r\n\r\n    const [Favorites, setFavorites] = useState([])\r\n    const [Loading, setLoading] = useState(true)\r\n    let variable = { userFrom: localStorage.getItem('userId') }\r\n\r\n    useEffect(() => {\r\n        fetchFavoredMovie()\r\n    }, [])\r\n\r\n    const fetchFavoredMovie = () => {\r\n        axios.post('/api/favorite/getFavoredMovie', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.favorites)\r\n                    setFavorites(response.data.favorites)\r\n                    setLoading(false)\r\n                } else {\r\n                    alert('Failed to get subscription videos')\r\n                }\r\n            })\r\n    }\r\n\r\n    const onClickDelete = (movieId, userFrom) => {\r\n\r\n        const variables = {\r\n            movieId: movieId,\r\n            userFrom: userFrom,\r\n        }\r\n\r\n        axios.post('/api/favorite/removeFromFavorite', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    fetchFavoredMovie()\r\n                } else {\r\n                    alert('Failed to Remove From Favorite')\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    const renderCards = Favorites.map((favorite, index) => {\r\n\r\n\r\n        const content = (\r\n            <div>\r\n                {favorite.moviePost ?\r\n                    <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${favorite.moviePost}`} />\r\n                    : \"no image\"}\r\n            </div>\r\n        );\r\n\r\n        return <tr key={index}>\r\n\r\n            <Popover content={content} title={`${favorite.movieTitle}`}>\r\n                <td>{favorite.movieTitle}</td>\r\n            </Popover>\r\n\r\n            <td>{favorite.movieRunTime} mins</td>\r\n            <td><button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}> Remove </button></td>\r\n        </tr>\r\n    })\r\n\r\n    return (\r\n        <div style={{ width: '85%', margin: '3rem auto' }}>\r\n            <Title level={2} > Favorite Movies By Me </Title>\r\n            <hr />\r\n            {user.userData && !user.userData.isAuth ?\r\n                <div style={{ width: '100%', fontSize: '2rem', height: '500px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                    <p>Please Log in first...</p>\r\n                    <a href=\"/login\">Go to Login page</a>\r\n                </div>\r\n                :\r\n                !Loading &&\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Movie Title</th>\r\n                            <th>Movie RunTime</th>\r\n                            <td>Remove from favorites</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {renderCards}\r\n                    </tbody>\r\n                </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FavoritePage\r\n"]},"metadata":{},"sourceType":"module"}